<?php
/**
 * 文章
 *
 * @aca 文章
 */
class controller_api_article extends api_controller_abstract
{
	private $article;

	function __construct($app)
	{
		parent::__construct($app);
		$this->article = loader::model('admin/article');
	}

    /**
     * 读取文章内容
     *
     * @aca 读取文章内容
     */
    function get()
    {
        $contentid = intval(value($_GET, 'contentid', 0));
        if(!$contentid)
        {
            $result = array(
                'state'=>false,
                'error'=>'内容编号错误'
            );
        }
        else
        {
            $data = $this->article->get($contentid, '*', 'show');
            if($data)
            {
                foreach(array(
                            'status_old','unpublished','unpublishedby',
                            'modified','modifiedby',
                            'checked','checkedby',
                            'locked','lockedby',
                            'noted','notedby',
                            'note','workflow_step','workflow_roleid',
                            'placeid','saveremoteimage'
                        ) as $field)
                {
                    unset($data[$field]);
                }
            }
            $result = array(
                'state'=>true,
                'data'=>$data
            );
        }
        echo json_encode($result);
    }

    /*得到全站的所有文章
      +1、每次按位置读取500条
      +@page:当前位置
      +@pagesize:每次获取的最大条数,默认是400条
    */
    function getall($page=1)
    {
        $page=$_POST['page'];
        if(empty($page) && $page<1)
        {
            $page=1;
        }
	else
	{
            $page=intval($_POST['page']);
        }

        $pagesize=200;
        $db=factory::db();
        $field="select c.contentid,title,c.subtitle,url,published,publishedby,catid,a.contentid";
        $table=" from cmstop_content as c inner join cmstop_article as a on c.contentid=a.contentid";
        $where=" where c.modelid=1 and c.status=6 ";
        $start=($page-1)*$pagesize;
        $limit=" limit $start,$pagesize";
        $catid_arr=array(24,25,26,27,28,29,92,93,94,95,96,97,98,99,100,101,103,104,105,106,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,136,137,138,142,143,148);
        $sql=$field.$table.$where.$limit;   //拼装sql语句

        $list=$db->select($sql);

        if(!empty($list))
        {
            foreach($list as $key=>&$value)
            {   
                $value['catname']=table('category',$value['catid'],'name');
                $value['author']=table('member',$value['publishedby'],'username');
                if(in_array($value['catid'],$catid_arr))
                {
                    $value['mark']=1;   //代表文章是英文
                }
                else
                {
                    $value['mark']=2;   //代表文章是中文
                }
            }

            $result = array('state'=>true,'list' =>$list);
        }
        else
        {
            $result=array('state'=>false,'error'=>'no data');
        }

        echo json_encode($result);

    }

    /**
     * 添加文章内容
     *
     * @aca 添加文章内容
     */
    function add()
    {
        $_POST['modelid'] = 1;
        $title = htmlspecialchars($_POST['title']);
        $regex = "/\/|\~|\!|\@|\#|\\$|\%|\^|\&|\*|\(|\)|\_|\+|\{|\}|\:|\<|\>|\?|\[|\]|\,|\.|\/|\;|\'|\`|\-|\=|\\\|\|/";
        $title = preg_replace($regex,"",$title);
        if ($list=factory::db()->get("select contentid from #table_content where title = '".$title."'")) 
		{
			$contentid=$this->article->edit($list['contentid'],$_POST);
        }
		else
		{
			$contentid = $this->article->add($_POST);
		}
        
        if ($contentid)
        {
            $result = array('state'=>true, 'contentid' => $contentid);
            $article = $this->article->get($contentid, 'url, status');
            $article['status'] == 6 && $result['url'] = $article['url'];
        }
        else
        {
            $result = array('state'=>false, 'error'=>$this->article->error());
            if($this->article->filterword)
            {
                $result['filterword'] = $this->article->filterword;
            }
        }
        echo json_encode($result);
    }
}
